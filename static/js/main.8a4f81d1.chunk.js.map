{"version":3,"sources":["Components/pages/About.js","Components/pages/Contact.js","Components/Error.js","Components/pages/Home.js","Components/Navigation.js","Components/pages/Footer.js","App.js","serviceWorker.js","index.js"],"names":["About","Helmet","className","Component","Contact","React","Error","Home","props","state","load","data","axios","get","headers","then","res","resume","setState","console","log","this","imgurl","field_res_image","body","to","id","src","alt","title","ReactHtmlParser","Navigation","exact","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","path","component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+OAuBeA,E,iLAbX,OACE,6BACE,kBAACC,EAAA,OAAD,KACE,+BAVI,UAYN,yBAAKC,UAAU,aACb,wBAAIA,UAAU,cAbV,e,GAGMC,aCeLC,E,iLAbX,OACE,6BACE,kBAACH,EAAA,OAAD,KACE,+BARI,eAUN,yBAAKC,UAAU,aACb,wBAAIA,UAAU,cAXV,oB,GAGQG,IAAMF,WCObG,E,iLANX,OACI,oD,GALYH,a,kCCsDLI,E,YAhDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,MAAM,EACNC,KAAM,IALS,E,iFASE,IAAD,OAClBC,IAAMC,IAAN,kDAA6D,CAC3DC,QAAS,CACP,eAAgB,sBAGnBC,MAAK,SAAAC,GACJ,IAAMC,EAASD,EAAIL,KAAK,GACzB,EAAKO,SAAS,CAAEP,KAAMM,S,+BAMvBE,QAAQC,IAAIC,KAAKZ,MAAME,MACvB,IAAMW,EAAS,+BAAiCD,KAAKZ,MAAME,KAAKY,gBAC1DC,EAAOH,KAAKZ,MAAME,KAAKa,KAE7B,OACE,6BACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUC,GAAG,OAEb,kBAACxB,EAAA,OAAD,KACE,+BApCI,mBAsCN,yBAAKC,UAAU,aACb,yBAAKwB,GAAG,eAAexB,UAAU,gCAE/B,yBAAKA,UAAU,aAAY,yBAAKyB,IAAKL,EAAQM,IAAI,kBACjD,wBAAI1B,UAAU,eAAemB,KAAKZ,MAAME,KAAKkB,OAC7C,yBAAK3B,UAAU,cAAe4B,IAAgBN,W,GAzCvCrB,aC0CJ4B,E,iLAxCX,OACA,kBAAC,IAAD,KACA,yBAAK7B,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,wCACf,kBAAC,IAAD,CAAS8B,OAAK,EAACP,GAAG,eAAevB,UAAU,gBAA3C,kBACA,4BAAQA,UAAU,iBAAiB+B,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACtL,0BAAMpC,UAAU,yBAGZ,yBAAKA,UAAU,2BAA2BwB,GAAG,0BACzC,wBAAIxB,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAS8B,OAAK,EAACP,GAAG,eAAec,gBAAgB,UAAjD,UAEJ,wBAAIrC,UAAU,YACV,kBAAC,IAAD,CAASuB,GAAG,SAASc,gBAAgB,UAArC,UAEJ,wBAAIrC,UAAU,YACV,kBAAC,IAAD,CAASuB,GAAG,WAAWc,gBAAgB,UAAvC,iBAOpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,eAAeC,UAAWlC,EAAMyB,OAAK,IACjD,kBAAC,IAAD,CAAOQ,KAAK,SAASC,UAAWzC,IAChC,kBAAC,IAAD,CAAOwC,KAAK,WAAWC,UAAWrC,IAClC,kBAAC,IAAD,CAAOqC,UAAWnC,W,GAjCLD,IAAMF,WCUhBuC,G,6LAVX,OACI,4BAAQxC,UAAU,UAChB,yBAAKA,UAAU,yBAAf,wC,GALWC,cCkBNwC,E,iLAXX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,W,GARUxC,aCIEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxC,MAAK,SAAAyC,GACjCA,EAAaC,iB","file":"static/js/main.8a4f81d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst TITLE = 'About'\n\n\nclass About extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>{ TITLE }</title>\n        </Helmet>\n        <div className=\"container\">\n          <h1 className=\"page-title\">{ TITLE }</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst TITLE = 'Contact Us'\n\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>{ TITLE }</title>\n        </Helmet>\n        <div className=\"container\">\n          <h1 className=\"page-title\">{ TITLE }</h1>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Contact;","import React, { Component } from 'react';\n\n\nclass Error extends Component {\n\n\n  render() {\n    return (\n        <h1>Opps Error page!</h1>\n    );\n  }\n}\n\nexport default Error;\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Helmet } from 'react-helmet';\nimport { Redirect, BrowserRouter } from \"react-router-dom\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nconst TITLE = 'Drupal & React'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      load: true, \n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://widespreadtopic.com/resfulapi/v1/resume`, {\n      headers: {\n        'Content-Type': 'application/json'\n    }\n    })\n    .then(res => {\n      const resume = res.data[0];\n     this.setState({ data: resume});\n    });\n  }\n\n\n  render() {\n    console.log(this.state.data);\n    const imgurl = \"https://widespreadtopic.com/\" + this.state.data.field_res_image;\n    const body = this.state.data.body;\n\n    return (\n      <div>\n        <BrowserRouter>\n        <Redirect to=\"/\" />\n        </BrowserRouter>\n        <Helmet>\n          <title>{ TITLE }</title>\n        </Helmet>\n        <div className=\"container\">\n          <div id=\"main-wrapper\" className=\"layout-main-wrapper clearfix\">\n            {/* <h1 className=\"page-title\">{ TITLE }</h1> */}\n            <div className=\"react-pic\"><img src={imgurl} alt=\"drupal&react\"/></div> \n            <h2 className=\"react-title\">{this.state.data.title}</h2>\n            <div className=\"react-body\">{ ReactHtmlParser(body) }</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, {useState} from 'react';\nimport { Route, Switch, NavLink, BrowserRouter as Router } from \"react-router-dom\";\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Error from './Error';\nimport Home from './pages/Home';\n\nclass Navigation extends React.Component {\n  render() {    \n\n    return (\n    <Router>\n    <nav className=\"nav-main\">\n        <div className=\"main-navigation\">\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\n            <NavLink exact to=\"/react-pages\" className=\"navbar-brand\">Drupal & React</NavLink>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <NavLink exact to=\"/react-pages\" activeClassName=\"active\">Home </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/about\" activeClassName=\"active\">About</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/contact\" activeClassName=\"active\">Contact </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n\n        <Switch>\n            <Route path=\"/react-pages\" component={Home} exact />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route component={Error} />\n        </Switch>\n    </nav>\n    </Router>\n    \n\n    )\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport '../../css/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Footer extends Component {\n\n  render() {\n    return (\n        <footer className=\"footer\">\n          <div className=\"site-footer container\">\n            Created By: Jayarr Castillo Jr.\n          </div>\n        </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Navigation from './Components/Navigation';\nimport './css/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from \"react-router-dom\";\n// import MainContent from './Components/MainContent';\nimport Footer from './Components/pages/Footer';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Navigation />\n        </BrowserRouter>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}